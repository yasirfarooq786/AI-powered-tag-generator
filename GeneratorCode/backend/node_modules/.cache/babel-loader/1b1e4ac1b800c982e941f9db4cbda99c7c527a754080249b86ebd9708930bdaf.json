{"ast":null,"code":"// This service would normally make API calls to your backend\n// For this example, we'll simulate the behavior\n\n// Simulate crawling a website\nexport const crawlWebsite = async url => {\n  // In a real app, this would call your backend API\n  console.log(`Crawling ${url}...`);\n\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 1500));\n\n  // Mock response - in reality, your backend would return this\n  return [{\n    src: 'https://example.com/images/logo.png',\n    alt: '',\n    originalAlt: ''\n  }, {\n    src: 'https://example.com/images/banner.jpg',\n    alt: '',\n    originalAlt: ''\n  }, {\n    src: 'https://example.com/images/product1.png',\n    alt: '',\n    originalAlt: 'product image'\n  }];\n};\n\n// Simulate generating ALT tags with AI\nexport const generateAltTags = async images => {\n  // In a real app, this would call your backend API which uses AI\n  console.log('Generating ALT tags with AI...');\n\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 2000));\n\n  // Mock AI response - in reality, your backend would call an AI service\n  return images.map(img => ({\n    ...img,\n    generatedAlt: `AI-generated description for ${img.src.split('/').pop()}`\n  }));\n};","map":{"version":3,"names":["crawlWebsite","url","console","log","Promise","resolve","setTimeout","src","alt","originalAlt","generateAltTags","images","map","img","generatedAlt","split","pop"],"sources":["/Users/mobilelive-ml-lpt-0113/Desktop/AI Powered ALT Generator/FrontEnd/src/services/crawlerService.jsx"],"sourcesContent":["// This service would normally make API calls to your backend\n// For this example, we'll simulate the behavior\n\n// Simulate crawling a website\nexport const crawlWebsite = async (url) => {\n    // In a real app, this would call your backend API\n    console.log(`Crawling ${url}...`);\n    \n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    \n    // Mock response - in reality, your backend would return this\n    return [\n      {\n        src: 'https://example.com/images/logo.png',\n        alt: '',\n        originalAlt: ''\n      },\n      {\n        src: 'https://example.com/images/banner.jpg',\n        alt: '',\n        originalAlt: ''\n      },\n      {\n        src: 'https://example.com/images/product1.png',\n        alt: '',\n        originalAlt: 'product image'\n      }\n    ];\n  };\n  \n  // Simulate generating ALT tags with AI\n  export const generateAltTags = async (images) => {\n    // In a real app, this would call your backend API which uses AI\n    console.log('Generating ALT tags with AI...');\n    \n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    \n    // Mock AI response - in reality, your backend would call an AI service\n    return images.map(img => ({\n      ...img,\n      generatedAlt: `AI-generated description for ${img.src.split('/').pop()}`\n    }));\n  };"],"mappings":"AAAA;AACA;;AAEA;AACA,OAAO,MAAMA,YAAY,GAAG,MAAOC,GAAG,IAAK;EACvC;EACAC,OAAO,CAACC,GAAG,CAAC,YAAYF,GAAG,KAAK,CAAC;;EAEjC;EACA,MAAM,IAAIG,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;EAEvD;EACA,OAAO,CACL;IACEE,GAAG,EAAE,qCAAqC;IAC1CC,GAAG,EAAE,EAAE;IACPC,WAAW,EAAE;EACf,CAAC,EACD;IACEF,GAAG,EAAE,uCAAuC;IAC5CC,GAAG,EAAE,EAAE;IACPC,WAAW,EAAE;EACf,CAAC,EACD;IACEF,GAAG,EAAE,yCAAyC;IAC9CC,GAAG,EAAE,EAAE;IACPC,WAAW,EAAE;EACf,CAAC,CACF;AACH,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAG,MAAOC,MAAM,IAAK;EAC/C;EACAT,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;;EAE7C;EACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;EAEvD;EACA,OAAOM,MAAM,CAACC,GAAG,CAACC,GAAG,KAAK;IACxB,GAAGA,GAAG;IACNC,YAAY,EAAE,gCAAgCD,GAAG,CAACN,GAAG,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;EACxE,CAAC,CAAC,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}