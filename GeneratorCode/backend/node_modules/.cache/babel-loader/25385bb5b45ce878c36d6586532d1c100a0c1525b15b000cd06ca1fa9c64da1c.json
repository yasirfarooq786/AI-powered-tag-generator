{"ast":null,"code":"var _jsxFileName = \"/Users/mobilelive-ml-lpt-0113/Desktop/AI Powered ALT Generator/FrontEnd/src/components/UrlInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { crawlWebsite } from '../services/crawlerService';\nimport LoadingSpinner from './LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UrlInput = ({\n  onImagesFetched,\n  setIsLoading,\n  setError\n}) => {\n  _s();\n  const [url, setUrl] = useState('');\n  const [isCrawling, setIsCrawling] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!url) return;\n    setIsCrawling(true);\n    setIsLoading(true);\n    setError(null);\n    try {\n      const images = await crawlWebsite(url);\n      onImagesFetched(images);\n    } catch (err) {\n      setError('Failed to crawl website. Please check the URL and try again.');\n      console.error(err);\n    } finally {\n      setIsCrawling(false);\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"url-input-form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        value: url,\n        onChange: e => setUrl(e.target.value),\n        placeholder: \"Enter website URL (e.g., https://example.com)\",\n        required: true,\n        disabled: isCrawling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isCrawling,\n        children: isCrawling ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this) : 'Extract Images'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(UrlInput, \"9728DXBof5lpKZMcrZHGDxJRrNo=\");\n_c = UrlInput;\nexport default UrlInput;\nvar _c;\n$RefreshReg$(_c, \"UrlInput\");","map":{"version":3,"names":["React","useState","crawlWebsite","LoadingSpinner","jsxDEV","_jsxDEV","UrlInput","onImagesFetched","setIsLoading","setError","_s","url","setUrl","isCrawling","setIsCrawling","handleSubmit","e","preventDefault","images","err","console","error","onSubmit","className","children","type","value","onChange","target","placeholder","required","disabled","fileName","_jsxFileName","lineNumber","columnNumber","size","_c","$RefreshReg$"],"sources":["/Users/mobilelive-ml-lpt-0113/Desktop/AI Powered ALT Generator/FrontEnd/src/components/UrlInput.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { crawlWebsite } from '../services/crawlerService';\nimport LoadingSpinner from './LoadingSpinner';\n\nconst UrlInput = ({ onImagesFetched, setIsLoading, setError }) => {\n  const [url, setUrl] = useState('');\n  const [isCrawling, setIsCrawling] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!url) return;\n\n    setIsCrawling(true);\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const images = await crawlWebsite(url);\n      onImagesFetched(images);\n    } catch (err) {\n      setError('Failed to crawl website. Please check the URL and try again.');\n      console.error(err);\n    } finally {\n      setIsCrawling(false);\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"url-input-form\">\n      <div className=\"input-group\">\n        <input\n          type=\"url\"\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          placeholder=\"Enter website URL (e.g., https://example.com)\"\n          required\n          disabled={isCrawling}\n        />\n        <button type=\"submit\" disabled={isCrawling}>\n          {isCrawling ? <LoadingSpinner size=\"small\" /> : 'Extract Images'}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default UrlInput;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,eAAe;EAAEC,YAAY;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChE,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,GAAG,EAAE;IAEVG,aAAa,CAAC,IAAI,CAAC;IACnBN,YAAY,CAAC,IAAI,CAAC;IAClBC,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMS,MAAM,GAAG,MAAMhB,YAAY,CAACS,GAAG,CAAC;MACtCJ,eAAe,CAACW,MAAM,CAAC;IACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZV,QAAQ,CAAC,8DAA8D,CAAC;MACxEW,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB,CAAC,SAAS;MACRL,aAAa,CAAC,KAAK,CAAC;MACpBN,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEH,OAAA;IAAMiB,QAAQ,EAAEP,YAAa;IAACQ,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eACtDnB,OAAA;MAAKkB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BnB,OAAA;QACEoB,IAAI,EAAC,KAAK;QACVC,KAAK,EAAEf,GAAI;QACXgB,QAAQ,EAAGX,CAAC,IAAKJ,MAAM,CAACI,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;QACxCG,WAAW,EAAC,+CAA+C;QAC3DC,QAAQ;QACRC,QAAQ,EAAElB;MAAW;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACF9B,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAACM,QAAQ,EAAElB,UAAW;QAAAW,QAAA,EACxCX,UAAU,gBAAGR,OAAA,CAACF,cAAc;UAACiC,IAAI,EAAC;QAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,GAAG;MAAgB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACzB,EAAA,CAzCIJ,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}