{"ast":null,"code":"export const crawlWebsite = async url => {\n  const response = await fetch('http://localhost:5000/api/crawl', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      url\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Failed to crawl website');\n  }\n  const data = await response.json();\n  return data.images;\n};\nexport const generateAltTags = async images => {\n  const response = await fetch('http://localhost:5000/api/generate-alt', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      images\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Failed to generate ALT tags');\n  }\n  const data = await response.json();\n  return data.images;\n};","map":{"version":3,"names":["crawlWebsite","url","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","images","generateAltTags"],"sources":["/Users/mobilelive-ml-lpt-0113/Desktop/AI Powered ALT Generator/GeneratorCode/frontend/src/services/crawlerService.jsx"],"sourcesContent":["export const crawlWebsite = async (url) => {\n  const response = await fetch('http://localhost:5000/api/crawl', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ url }),\n  });\n  \n  if (!response.ok) {\n    throw new Error('Failed to crawl website');\n  }\n  \n  const data = await response.json();\n  return data.images;\n};\n\nexport const generateAltTags = async (images) => {\n  const response = await fetch('http://localhost:5000/api/generate-alt', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ images }),\n  });\n  \n  if (!response.ok) {\n    throw new Error('Failed to generate ALT tags');\n  }\n  \n  const data = await response.json();\n  return data.images;\n};"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,MAAOC,GAAG,IAAK;EACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;IAC9DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP;IAAI,CAAC;EAC9B,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACE,MAAM;AACpB,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,MAAOD,MAAM,IAAK;EAC/C,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;IACrEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEK;IAAO,CAAC;EACjC,CAAC,CAAC;EAEF,IAAI,CAACX,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACE,MAAM;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}